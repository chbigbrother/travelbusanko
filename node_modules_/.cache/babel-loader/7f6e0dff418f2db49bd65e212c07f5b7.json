{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PKNU\\\\Documents\\\\GitHub\\\\travelbusanko\\\\travelbusanko\\\\src\\\\maps\\\\Map.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '45%',\n    height: '80%'\n  }\n};\nexport class CurrentLocation extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const {\n        google\n      } = this.props;\n      const maps = google.maps;\n      const mapRef = this.refs.map; // reference to the actual DOM element\n\n      const node = ReactDOM.findDOMNode(mapRef);\n      let {\n        zoom\n      } = this.props;\n      const {\n        lat,\n        lng\n      } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign({}, {\n        center: center,\n        zoom: zoom\n      }); // maps.Map() is constructor that instantiates the map\n\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    const {\n      lat,\n      lng\n    } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  renderChildren() {\n    const {\n      children\n    } = this.props;\n    if (!children) return;\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return /*#__PURE__*/React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        ref: \"map\",\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 12\n      }, this), this.renderChildren()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }, this);\n  }\n\n}\nexport default CurrentLocation;\nCurrentLocation.defaultProps = {\n  zoom: 15,\n  initialCenter: {\n    lat: 35.118620223842,\n    lng: 129.0959130382\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","map":{"version":3,"names":["React","ReactDOM","mapStyles","map","position","width","height","CurrentLocation","Component","componentDidUpdate","prevProps","prevState","google","props","loadMap","currentLocation","state","recenterMap","current","maps","center","LatLng","lat","lng","panTo","componentDidMount","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","mapRef","refs","node","findDOMNode","zoom","mapConfig","Object","assign","Map","constructor","initialCenter","renderChildren","children","Children","c","cloneElement","mapCenter","render","style","defaultProps","visible"],"sources":["C:/Users/PKNU/Documents/GitHub/travelbusanko/travelbusanko/src/maps/Map.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '45%',\r\n    height: '80%',\r\n  }\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.google !== this.props.google) {\r\n          this.loadMap();\r\n        }\r\n        if (prevState.currentLocation !== this.state.currentLocation) {\r\n          this.recenterMap();\r\n        }\r\n    }\r\n    \r\n    recenterMap() {\r\n        const map = this.map;\r\n        const current = this.state.currentLocation;\r\n    \r\n        const google = this.props.google;\r\n        const maps = google.maps;\r\n    \r\n        if (map) {\r\n          let center = new maps.LatLng(current.lat, current.lng);\r\n          map.panTo(center);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.centerAroundCurrentLocation) {\r\n          if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n              const coords = pos.coords;\r\n              this.setState({\r\n                currentLocation: {\r\n                  lat: coords.latitude,\r\n                  lng: coords.longitude\r\n                }\r\n              });\r\n            });\r\n          }\r\n        }\r\n        this.loadMap();\r\n    }\r\n    loadMap() {\r\n        if (this.props && this.props.google) {\r\n          // checks if google is available\r\n          const { google } = this.props;\r\n          const maps = google.maps;\r\n    \r\n          const mapRef = this.refs.map;\r\n    \r\n          // reference to the actual DOM element\r\n          const node = ReactDOM.findDOMNode(mapRef);\r\n    \r\n          let { zoom } = this.props;\r\n          const { lat, lng } = this.state.currentLocation;\r\n          const center = new maps.LatLng(lat, lng);\r\n          const mapConfig = Object.assign(\r\n            {},\r\n            {\r\n              center: center,\r\n              zoom: zoom\r\n            }\r\n          );\r\n    \r\n          // maps.Map() is constructor that instantiates the map\r\n          this.map = new maps.Map(node, mapConfig);\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { lat, lng } = this.props.initialCenter;\r\n        this.state = {\r\n            currentLocation: {\r\n            lat: lat,\r\n            lng: lng\r\n            }\r\n        };  \r\n    }\r\n\r\n    renderChildren() {\r\n        const { children } = this.props;\r\n    \r\n        if (!children) return;\r\n    \r\n        return React.Children.map(children, c => {\r\n          if (!c) return;\r\n          return React.cloneElement(c, {\r\n            map: this.map,\r\n            google: this.props.google,\r\n            mapCenter: this.state.currentLocation\r\n          });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const style = Object.assign({}, mapStyles.map);\r\n       return (\r\n         <div>\r\n           <div style={style} ref=\"map\">\r\n             Loading map...\r\n           </div>\r\n           {this.renderChildren()}\r\n         </div>\r\n       );\r\n     }\r\n\r\n}\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 15,\r\n  initialCenter: {\r\n    lat: 35.118620223842,\r\n    lng: 129.0959130382\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}