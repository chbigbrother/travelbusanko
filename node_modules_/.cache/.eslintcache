[{"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\index.js":"1","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\App.js":"2","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\members\\LoginPage.js":"3","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\members\\SignupPage.js":"4","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\token\\Auth.js":"5","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\homes\\HomePage.js":"6","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\AuthRoute.js":"7","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\routes.js":"8","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\NavBar.js":"9","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\maps\\MapPage.js":"10","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\regLocations\\AddLocPage.js":"11","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\EditPage.js":"12","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\CreatePage.js":"13","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\ShowPage.js":"14","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\ListPage.js":"15","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\events\\EventListPage.js":"16","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\maps\\Map.js":"17","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\BlogForm.js":"18","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\BlogList.js":"19","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\Card.js":"20","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\Pagination.js":"21","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\LoadingSpinner.js":"22","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\members\\ModifyUser.js":"23"},{"size":729,"mtime":1661220118854,"results":"24","hashOfConfig":"25"},{"size":2142,"mtime":1661735915544,"results":"26","hashOfConfig":"25"},{"size":5076,"mtime":1661739789510,"results":"27","hashOfConfig":"25"},{"size":5462,"mtime":1661327835738,"results":"28","hashOfConfig":"25"},{"size":749,"mtime":1661240153992,"results":"29","hashOfConfig":"25"},{"size":2237,"mtime":1661683180588,"results":"30","hashOfConfig":"25"},{"size":644,"mtime":1661236279088,"results":"31","hashOfConfig":"25"},{"size":1122,"mtime":1661738390683,"results":"32","hashOfConfig":"25"},{"size":7263,"mtime":1661754905760,"results":"33","hashOfConfig":"25"},{"size":2650,"mtime":1661755220108,"results":"34","hashOfConfig":"25"},{"size":5637,"mtime":1661752505546,"results":"35","hashOfConfig":"25"},{"size":189,"mtime":1660642996000,"results":"36","hashOfConfig":"25"},{"size":190,"mtime":1661149098770,"results":"37","hashOfConfig":"25"},{"size":1974,"mtime":1660891242993,"results":"38","hashOfConfig":"25"},{"size":494,"mtime":1660690402000,"results":"39","hashOfConfig":"25"},{"size":126,"mtime":1660533678000,"results":"40","hashOfConfig":"25"},{"size":3267,"mtime":1661262200779,"results":"41","hashOfConfig":"25"},{"size":4109,"mtime":1660891134358,"results":"42","hashOfConfig":"25"},{"size":3639,"mtime":1660893934104,"results":"43","hashOfConfig":"25"},{"size":789,"mtime":1660810192000,"results":"44","hashOfConfig":"25"},{"size":2100,"mtime":1660814408000,"results":"45","hashOfConfig":"25"},{"size":309,"mtime":1660204434000,"results":"46","hashOfConfig":"25"},{"size":4759,"mtime":1661756146942,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1fpsjsx",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"51"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"51"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\index.js",[],[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\App.js",["129","130","131","132","133"],[],"import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport LoginPage from './members/LoginPage';\nimport SignupPage from './members/SignupPage';\nimport HomePage from './homes/HomePage';\nimport AuthRoute from './components/AuthRoute';\nimport { refreshToken } from './token/Auth';\n\n\nfunction App(){\n    \n    const [isLogin , setIsLogin] = useState(false);\n    const [generateToken , setToken] = useState(false);\n    const [userInfo , setUserInfo] = useState(false);\n    const [loading , setLoading] = useState(false);\n    var TOKEN = '';\n    useEffect(()=>{\n      try{\n          refreshToken(loginCallBack);\n      }catch(e){\n          console.log(e);\n      }\n    },[]);\n  \n    function loginCallBack(login){\n      setIsLogin(login);\n      setLoading(true);\n    }\n\n    function accessToken(token){\n      localStorage.setItem(\"token\", token);\n      setToken(token);\n    }\n\n    function logoutCallBack(logout){\n      setIsLogin(false);\n      localStorage.setItem(\"token\", 'undefined');\n      window.location.href=  'http://travelbusanko.com'; // 'http://localhost:3000'; //\n    }\n\n    function UserInfo(object){\n      localStorage.setItem(\"user\", object);\n      setUserInfo(object);\n    }\n    \n    if(loading){\n      return ( \n        <Router>\n        <>\n          {!isLogin && localStorage.getItem(\"token\") == 'undefined' || localStorage.getItem(\"token\") == null ? (\n            <Switch>\n              <Route exact path=\"/\" render={(props)=> <LoginPage {...props} loginCallBack={loginCallBack} UserInfo={UserInfo} accessToken={accessToken} />} />\n              <Route exact path=\"/members/signup\" component={SignupPage} key='/members/signup' />          \n            </Switch>\n            ) : (\n              <AuthRoute exact isLogin={isLogin} path=\"/home\" component={HomePage} UserInfo={localStorage.getItem(\"user\")} logoutCallBack={logoutCallBack} accessToken={generateToken} />\n            )\n          }\n        </>          \n        </Router>\n      );\n    } else {\n      return (\n        <div>\n          Loading ....\n        </div>\n      )\n    }\n}\n\nexport default App;\n","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\members\\LoginPage.js",["134"],[],"// src/pages/LoginPage.jsx\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { refreshToken } from '../token/Auth';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst url = 'http://travelbusanko.com';\r\n\r\nfunction LoginPage(props){\r\n    \r\n    const [inputId, setInputId] = useState('');\r\n    const [inputPw, setInputPw] = useState('');\r\n    \r\n    /// input data 변화시 value 값을 변경시 useState 해준다.\r\n    const handleInputId = (e) => {\r\n        setInputId(e.target.value)\r\n    };\r\n\r\n    const handleinputPw = (e) => {\r\n        setInputPw(e.target.value)\r\n    }\r\n\r\n    function onClickLogin(){\r\n        \r\n        try{\r\n            let data = {userId: inputId, userPw: inputPw};\r\n            axios.post(url + \"/api/login\",JSON.stringify(data), {\r\n                headers: {\r\n                  \"Content-Type\": `application/json`,\r\n                }})\r\n            .then(res =>{\r\n                if(res.data.userId === undefined){\r\n                    //[id 불일치] userID = undefined, msg = '입력하신 id가 유효하지 않습니다.'\r\n                    alert(\"입력하신 아이디가 일치하지 않습니다.\");\r\n                    Swal.fire({\r\n                        icon: \"warning\",\r\n                        title: \"로그인 에러\",\r\n                        text: '입력하신 아이디가 일치하지 않습니다.',\r\n                        showCancelButton: true,\r\n                        confirmButtonText: \"확인\",\r\n                        cancelButtonText: \"취소\",\r\n                    })\r\n                } else if(res.data.userId === null){\r\n                    //[id 존재, pw 불일치] userID = null, msg = undefined\r\n                    alert(\"입력하신 비밀번호가 일치하지 않습니다.\")\r\n                    Swal.fire({\r\n                        icon: \"warning\",\r\n                        title: \"로그인 에러\",\r\n                        text: `입력하신 비밀번호가 일치하지 않습니다.`,\r\n                        showCancelButton: true,\r\n                        confirmButtonText: \"확인\",\r\n                        cancelButtonText: \"취소\",\r\n                    })\r\n                } else if(res.data.userId === inputId){\r\n                    //[id pw 일치] userID = userId1, msg = undefined\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: '로그인 성공',\r\n                        showConfirmButton: false,\r\n                        timer: 1000,\r\n                        timerProgressBar: true,\r\n                    })\r\n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + res.data;\r\n                    \r\n                    props.loginCallBack(true);\r\n                    props.accessToken(res.data.token);\r\n                    props.UserInfo(inputId);\r\n                    props.history.push(props);\r\n                    // window.location.href= 'http://travelbusanko.com/home'; \r\n                   \r\n                    setTimeout(function(){\r\n                        refreshToken(null);\r\n                        window.location.href= 'http://travelbusanko.com/home'; \r\n                    } , (60 * 10000));\r\n                }\r\n                \r\n            })\r\n            .catch(ex=>{\r\n                console.log(\"login requset fail : \" + ex);\r\n            })\r\n            .finally(()=>{console.log(\"login request end\")});\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n    })\r\n    \r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"Auth-form-container\">\r\n                <form className=\"Auth-form\">\r\n                    <div className=\"Auth-form-content\">\r\n                    <h3 className=\"Auth-form-title\">로그인</h3>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>아이디</label>\r\n                        <input type=\"text\" className=\"form-control mt-1\" placeholder=\"아이디를 입력하세요.\" name = \"user_id\" onChange = { handleInputId } />\r\n                    </div>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>비밀번호</label>\r\n                        <input type=\"password\" className=\"form-control mt-1\" placeholder=\"비밀번호를 입력하세요.\" name = \"user_pw\" onChange = { handleinputPw } />\r\n                    </div>\r\n                    <div className=\"d-grid gap-2 mt-3\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick = { onClickLogin } >\r\n                        로그인\r\n                        </button>\r\n                    </div>\r\n                    <p className=\"forgot-password text-right mt-2\">\r\n                        <Link to=\"/members/signup\">회원가입</Link>\r\n                    </p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\members\\SignupPage.js",["135","136"],[],"import Axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport './LoginPage.css';\r\n\r\nvar url = 'http://travelbusanko.com';\r\n\r\nfunction SignupPage() {\r\n    const [inputId, setInputId] = useState('');\r\n    const [inputPw, setInputPw] = useState('');\r\n    const [inputName, setInputName] = useState('');\r\n    const [inputEmail, setInputEmail] = useState('');\r\n    const [inputPhone, setInputPhone] = useState('');\r\n    const [inputBirth, setInputBirth] = useState('');\r\n    \r\n    const handleInputId = (e) => {\r\n        setInputId(e.target.value)\r\n    };\r\n\r\n    const handleinputPw = (e) => {\r\n        setInputPw(e.target.value)\r\n    }\r\n    const handleinputName = (e) => {\r\n        setInputName(e.target.value)\r\n    }\r\n    const handleinputEmail = (e) => {\r\n        setInputEmail(e.target.value)\r\n    }\r\n    const handleinputPhone = (e) => {\r\n        setInputPhone(e.target.value)\r\n    }\r\n    const handleinputBirth = (e) => {\r\n        setInputBirth(e.target.value)\r\n    }\r\n\r\n    const checkAvailId = () => {\r\n        console.log(inputId)\r\n        Axios.post(url + '/api/checkid', null, {\r\n            params: {\r\n                'user_id': inputId,\r\n            }\r\n        }).then((response) => {\r\n            if(response.data.message=='No'){\r\n                alert('사용이 불가능한 아이디 입니다.')\r\n            }else{\r\n                alert('사용이 가능한 아이디 입니다.')\r\n            }\r\n        })\r\n    }\r\n\r\n    /// login 버튼 클릭 이벤트\r\n    const onClickSignup = () => {\r\n        Axios.post(url + '/api/signup', null, {\r\n            params: {\r\n                'user_id': inputId,\r\n                'user_pwd': inputPw,\r\n                'user_name': inputName,\r\n                'user_email': inputEmail,\r\n                'user_phone': inputPhone,\r\n                'user_birth': inputBirth,\r\n\r\n            }\r\n        }).then((response) => {\r\n            /*if (response.data.userId === undefined) {\r\n                alert('입력하신 id가 일치하지 않습니다.')\r\n            } else if (response.data.userId === null) {\r\n                alert('입력하신 pwd가 일치하지 않습니다.')\r\n            } else if (response.data.userId === inputId) {\r\n                sessionStorage.setItem('user_id', inputId)\r\n                document.location.href = url + '/'\r\n            }*/\r\n            console.log(response);\r\n            document.location.href = url\r\n        }).catch()\r\n    }\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"App\">\r\n            <div className=\"Auth-form-container\">\r\n                <form className=\"Auth-form\">\r\n                    <div className=\"Auth-form-content\">\r\n                        <h3 className=\"Auth-form-title\">회원가입</h3>\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>아이디</label>\r\n                            <input type=\"text\" className=\"form-control mt-1\" placeholder=\"아이디 입력\" name = \"user_id\" onChange = { handleInputId } />\r\n                        </div>\r\n                        <div className=\"d-grid gap-2 mt-3\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick = { checkAvailId } >\r\n                            아이디 중복 확인\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>비밀번호</label>\r\n                            <input type=\"password\" className=\"form-control mt-1\" placeholder=\"비밀번호 입력\" name = \"user_pwd\" onChange = { handleinputPw } />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>이름</label>\r\n                            <input type=\"text\" className=\"form-control mt-1\" placeholder=\"e.g 홍길동\" name = \"user_name\" onChange = { handleinputName } />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Email 주소</label>\r\n                            <input type=\"email\" className=\"form-control mt-1\" placeholder=\"Email 주소 입력\" name = \"user_email\" onChange = { handleinputEmail } />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group mt-3\">\r\n                            <label>전화번호</label>\r\n                            <input type=\"text\" className=\"form-control mt-1\" placeholder=\"010-1234-0000\" name = \"user_phone\" onChange = { handleinputPhone } />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>생년월일</label>\r\n                            <input type=\"text\" className=\"form-control mt-1\" placeholder=\"6자리 생년월일 입력\" name = \"user_birth\" onChange = { handleinputBirth } />\r\n                        </div>\r\n                        <div className=\"d-grid gap-2 mt-3\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick = { onClickSignup } >\r\n                            회원가입\r\n                            </button>\r\n                        </div>\r\n                        <p className=\"text-center mt-2\">\r\n                            \r\n                        </p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupPage;","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\token\\Auth.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\homes\\HomePage.js",["137"],[],"\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '80vh'\r\n};\r\n\r\nconst HomePage = () => {\r\n    const [locTypes, setLocTypes] = useState([]);\r\n    const nextPage = useHistory();\r\n\r\n    const center = {\r\n        lat : 35.118620223842,\r\n        lng : 129.0959130382\r\n    }\r\n    const url = \"http://travelbusanko.com\";\r\n    useEffect(() => {\r\n        axios.get(url + \"/api/location/types/main\", {\r\n            headers: {\r\n                \"Content-Type\": `application/json`,\r\n            }\r\n        }).then((res) => {\r\n            setLocTypes([...res.data]);\r\n        })\r\n    }, []);\r\n    \r\n    return (\r\n        \r\n        <Container>\r\n        <Row>\r\n            <Col>\r\n                    {\r\n                        locTypes.map((data) => (\r\n                            <div class='d-grid gap-2' style={{\"margin-bottom\":\"10%\"}}>\r\n                                <Button variant=\"primary\" size=\"lg\" onClick={() =>  nextPage.push({\r\n                                    pathname: \"/maps\",\r\n                                    inputValue: {mloc_id:data.mloc_id},\r\n                                    })}>\r\n                                    {data.loc_name}\r\n                                </Button>\r\n                            </div>\r\n                        ))\r\n                    }\r\n\r\n                \r\n            </Col>\r\n            <Col>\r\n                <LoadScript googleMapsApiKey=\"AIzaSyB-RafIQqKjj2kactuwVHkuoulZSKA4rSs\">\r\n                <GoogleMap\r\n                    bootstrapURLKeys={{key:\"AIzaSyB-RafIQqKjj2kactuwVHkuoulZSKA4rSs\"}}\r\n                    mapContainerStyle={containerStyle}\r\n                    center={center}\r\n                    zoom={14}\r\n                >\r\n                </GoogleMap>\r\n                </LoadScript>\r\n            </Col>\r\n          \r\n        </Row>\r\n      </Container>\r\n    );\r\n};\r\n\r\nexport default HomePage;","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\AuthRoute.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\routes.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\NavBar.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\maps\\MapPage.js",["138","139"],[],"import React, { Component } from \"react\";\r\n// import { Wrapper, Status } from \"@googlemaps/react-wrapper\";\r\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport $ from 'jquery';\r\nimport './Maps.css';\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '80vh'\r\n};\r\n\r\n\r\nconst url = \"http://travelbusanko.com\";\r\n\r\nconst MapPage = (props) => {\r\n    const [lat, setLat] = useState('');\r\n    const [lng, setLng] = useState('');\r\n    \r\n    const center = {\r\n      lat : lat,\r\n      lng : lng\r\n    }\r\n    var loc_id = \"MLOC001\";\r\n    \r\n    \r\n    useEffect(() => {\r\n      if (typeof(props.location.inputValue) != 'undefined'){\r\n        loc_id = props.location.inputValue.mloc_id;\r\n      }\r\n      \r\n      axios.get(url + `/api/location/types/main/${loc_id}`, {\r\n          headers: {\r\n              \"Content-Type\": `application/json`,\r\n          }\r\n      }).then((res) => {\r\n        var data = res.data[0];\r\n        setLat(Number(data.loc_lat));\r\n        setLng(Number(data.loc_lng)); \r\n      })\r\n      axios.get(url + `/api/view/image/${loc_id}`, {\r\n        headers: {\r\n            \"Content-Type\": `application/json`,\r\n        }\r\n      }).then((res) => {\r\n          \r\n          var data = res.data;\r\n          var innerHTML = \"\";\r\n          for(var i=0; i<data.length; i++){\r\n            innerHTML += \"<img src='http://travelbusanko.com/\" + data[i].saved_path + \"' class='image__box' />\" ;\r\n            \r\n          }\r\n          $('.image__viewer').html(innerHTML);\r\n\r\n      })\r\n    }, []);\r\n    \r\n      \r\n    \r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyB-RafIQqKjj2kactuwVHkuoulZSKA4rSs\">\r\n              <GoogleMap\r\n                bootstrapURLKeys={{key:\"AIzaSyB-RafIQqKjj2kactuwVHkuoulZSKA4rSs\"}}\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={14}\r\n              >\r\n                { /* Child components, such as markers, info windows, etc. */ }\r\n                <></>\r\n              </GoogleMap>\r\n            </LoadScript>\r\n          </Col>\r\n          <Col>\r\n          <Figure className=\"image__viewer m-3\">\r\n\r\n          </Figure>\r\n            {/* <div className=\"image__viewer m-3\">\r\n            \r\n            </div> */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      \r\n              \r\n    );\r\n    \r\n}\r\n\r\n  \r\nexport default MapPage;",[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\regLocations\\AddLocPage.js",["140","141"],[],"import axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport $ from 'jquery';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst url = \"http://travelbusanko.com\";\r\nfunction AddLocPage() {\r\n    \r\n    const [previewImages, setPreviewImages] = useState([]);\r\n    const [locTypes, setlocTypes] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(url + \"/api/location/types\", {\r\n            headers: {\r\n                \"Content-Type\": `application/json`,\r\n            }\r\n        }).then((res) => {\r\n            setlocTypes([...res.data]);\r\n            var data = res.data;\r\n            var innerHTML = \"<option value='\" + data[0].loctype_id + \"'>위치 타입 선택</option>\";\r\n            for(var i=0; i<data.length; i++){\r\n                innerHTML += \"<option value='\" + data[i].loctype_id + \"'>\" + data[i].loctype_name + \"</option>\";\r\n            }\r\n            $(\".selectbox\").html(innerHTML);\r\n        })\r\n    }, []);\r\n    \r\n    const addImage = e => {\r\n        const nowSelectImageList = e.target.files;\r\n        const previewList = [...nowSelectImageList];\r\n        let fileURL = [];\r\n\r\n        let file;\r\n        let maxFile = 50;\r\n        let filesLength = nowSelectImageList.length > maxFile ? maxFile : nowSelectImageList.length;\r\n        \r\n        fileURL.push(nowSelectImageList);\r\n        \r\n        for(var i=0; i<filesLength; i++){\r\n            file = nowSelectImageList[i];\r\n            if(file.type !== \"image/jpeg\" && file.type !== \"image/jpg\" && file.type !== \"image/png\"){\r\n                \r\n                Swal.fire({\r\n                    icon: \"warning\",\r\n                    title: \"사진 형식 에러\",\r\n                    text: `JPG 사진 파일만 가능합니다.`,\r\n                    showCancelButton: true,\r\n                    confirmButtonText: \"확인\",\r\n                    cancelButtonText: \"취소\",\r\n                })\r\n                break;\r\n            } else{\r\n                const preview = URL.createObjectURL(nowSelectImageList[i]);\r\n                previewList.push(preview);\r\n            }\r\n        }\r\n        setPreviewImages(previewList);\r\n    }\r\n\r\n    const addSubLocations = (e) => {\r\n        \r\n        const main_value = $(\".selectbox\").val();\r\n        if(main_value != \"loct_001\"){\r\n            $(\".sub_selectbox\").css(\"display\", \"block\");       \r\n            axios.get(url + \"/api/location/types/main\", {\r\n                headers: {\r\n                    \"Content-Type\": `application/json`,\r\n                }\r\n            }).then((res) => {\r\n                var data = res.data;\r\n                var innerHTML = \"<option value='\" + data[0].mloc_id + \"'>위치 타입 선택</option>\";\r\n                for(var i=0; i<data.length; i++){\r\n                    innerHTML += \"<option value='\" + data[i].mloc_id + \"'>\" + data[i].loc_name + \"</option>\";\r\n                }\r\n                $(\".sub_selectbox\").html(innerHTML);                \r\n            })            \r\n        } else{\r\n            $(\".sub_selectbox\").css(\"display\", \"none\");                \r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        \r\n    })\r\n\r\n  return (\r\n    <div className='m-5'>\r\n    <Form name=\"form\" method=\"post\" encType='multipart/form-data' action=\"http://travelbusanko.com/api/add/location\">\r\n        <Form.Label>위치 타입</Form.Label>\r\n        <Form.Select aria-label=\"Default select example\" className='selectbox' name=\"loctype_id\" onChange={ addSubLocations }>\r\n            {/* <option value=\"1\">One</option>        \"http://travelbusanko.com/api/add/location\" http://localhost:5000/api/add/location\r\n            <option value=\"2\">Two</option>\r\n            <option value=\"3\">Three</option> */}\r\n        </Form.Select>\r\n        <br/>\r\n        \r\n        <Form.Select aria-label=\"Default select example\" className=\"sub_selectbox\" name=\"main_loctype_id\" style={{\"display\": \"none\"}} > \r\n            {/* <option value=\"1\">One</option>       \r\n            <option value=\"2\">Two</option>\r\n            <option value=\"3\">Three</option> */}\r\n        </Form.Select>\r\n        <br/>\r\n        <Form.Control type=\"hidden\" name=\"post_type\" value=\"LOC\" />\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>위치명</Form.Label>\r\n            <Form.Control type=\"text\" name=\"loc_name\" placeholder=\"위치명입력\" />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>위도</Form.Label>\r\n            <Form.Control type=\"text\" name=\"loc_lat\" placeholder=\"위도 입력\" />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>경도</Form.Label>\r\n            <Form.Control type=\"text\" name=\"loc_lng\" placeholder=\"경도 입력\" />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" onChange={ addImage }>\r\n            <Form.Label>위치 사진</Form.Label>\r\n            <Form.Control type=\"file\" name=\"uploadfile\" multiple=\"multiple\" placeholder=\"위치 포인트 입력\" />\r\n        </Form.Group>\r\n        <div className='preview__box' style={{width:'100%', height:'300px', display:'flex'}}>\r\n        {previewImages.map((image, id) => (\r\n            <div key={id} style={{float:'left'}}>\r\n                <img src={image} alt={`${image}-${id}`} style={{width:'100%', height:'300px'}}/>\r\n            </div>\r\n        ))}\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n        </Button>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddLocPage;",[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\EditPage.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\CreatePage.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\ShowPage.js",["142","143"],[],"import axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n//import LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ShowPage = () => {\r\n    const url = \"http://travelbusanko.com\";\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState([]);\r\n    const [loading, setLoading ] = useState(true);\r\n    //console.log(id);\r\n   \r\n    const getPost = (id) => {        \r\n        //axios.get(\"http://localhost:5000/board_test/g1\", { params: {'id' : id}}).then((res) => { \r\n        axios.get(url + `/board_test/${id}`).then((res) => {                    \r\n          setPost(res.data[0]);\r\n          //console.log(res.data[0].title);        \r\n          //console.log(post);   \r\n          setLoading(false);\r\n        }) \r\n    }\r\n \r\n    useEffect(() => {\r\n        getPost(id)\r\n    }, [id])\r\n\r\n    const printDate=(timestamp) => {\r\n        return new Date(timestamp).toLocaleString();\r\n    }\r\n\r\n    /*   if( loading ) {\r\n        return <LoadingSpinner />\r\n    }  */\r\n    return(\r\n         <div>\r\n            <div className=\"d-flex\">\r\n                        <h1 className=\"flex-grow-1\">  { post.title }   </h1> \r\n             {/* <ul>\r\n\t            {post.map(post => (\r\n\t                <li key={post.id}>\r\n\t                {post.title} ({post.body})\r\n\t                </li>\r\n\t            ))}\r\n\t        </ul> \r\n  */}\r\n                <div>                   \r\n                    <Link className=\"btn btn-primary\"\r\n                        to={`/blogs/${id}/edit`}\r\n                    >\r\n                        EDIT\r\n                    </Link> \r\n                </div>\r\n            </div>\r\n            <small className=\"text-muted\">\r\n             {/* Created At: {printDate(post.createdAt)}  */}\r\n            </small>\r\n            <hr />\r\n             <p>   { post.body  }  </p> \r\n\r\n           \r\n          </div>\r\n    );\r\n}; \r\n\r\nexport default ShowPage;\r\n","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\blogs\\ListPage.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\events\\EventListPage.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\maps\\Map.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\BlogForm.js",["144"],[],"import { useState } from  'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { bool } from 'prop-types';\r\nimport { useEffect } from 'react';\r\n\r\nconst BlogForm = ( {editing} ) => {\r\n    const url = 'http://travelbusanko.com';\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    console.log(id);\r\n\r\n    const [title, setTitle] = useState('');   \r\n    const [originalTitle, setOriginalTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [originalBody, setOriginalBody] = useState('');\r\n    const [publish, setPublish] = useState(true); \r\n    const [originalPublish, setOriginalPublish] = useState(false); \r\n\r\n    useEffect(()=>{\r\n      if (editing) {        \r\n      //axios.get(`http://localhost:5000/board_test/${id}`).then(res => {\r\n      //axios.get(url + `/board_test/${id}`).then(res => {\r\n      axios.get(url + `/board_test/${id}`).then(res => {\r\n        console.log(res.data[0].title);\r\n        //console.log(\"test\");\r\n        //console.log(id);\r\n        setTitle(res.data[0].title);\r\n        console.log(title);\r\n        setOriginalTitle(res.data[0].title);\r\n        setBody(res.data[0].body);\r\n        setOriginalBody(res.data[0].body);\r\n        setPublish(res.data[0].publish);\r\n        setOriginalPublish(res.data[0].publish);\r\n      })\r\n     }\r\n    },[id, editing]);\r\n\r\n    const isEdited =() =>{\r\n      return title !== originalTitle \r\n        || body !== originalBody\r\n        || publish !== originalPublish;\r\n    };\r\n\r\n    const goBack =()=>{\r\n      if(editing){ \r\n      history.push(`/blogs/${id}`);\r\n      } else {\r\n      history.push('/blogs');\r\n      }\r\n    }\r\n    \r\n\r\n    const onSubmit = () => {\r\n        //console.log(title, body);\r\n        if (editing) {       \r\n          axios.put(url + `/board_test/${id}`, {\r\n            title, //: title,\r\n            body //: body,\r\n            //publish\r\n          }).then(res => {\r\n              //console.log(res);\r\n              //setOriginalTitle(res.data.title);              \r\n              //setOriginalBody(res.data.body);\r\n              history.push(`/blogs/${id}`)\r\n          })\r\n\r\n        } else {\r\n            axios.post(url+ '/board_test/:id', {\r\n            title,\r\n            body\r\n           // publish,\r\n           // createdAt: Date.now()\r\n        }).then(() => {\r\n          history.push('/blogs');\r\n        })\r\n      }\r\n    };\r\n\r\n    const onChangePublish = (e)=>{\r\n      console.log(e.target.checked);\r\n      setPublish(e.target.checked);\r\n    };\r\n\r\n  return(\r\n        <div> \r\n        <h1> {editing ? 'Edit a blog post' : 'Create a blog post'} </h1>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input \r\n            className=\"form-control\" \r\n            value= { title }\r\n            onChange={ (event)=> {\r\n              setTitle(event.target.value);  \r\n            } }\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\"> Content </label>\r\n          <textarea \r\n            className=\"form-control\" \r\n            value = { body }\r\n            onChange={ (event)=> {\r\n              setBody(event.target.value);\r\n            } }\r\n            rows=\"10\"\r\n          />\r\n        </div>\r\n        <div className=\"form-check\" mb-3>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type =\"checkbox\"\r\n              checked={publish}\r\n              onChange={onChangePublish}\r\n            />\r\n            <label className=\"from-check-label\">\r\n              Publish\r\n            </label>\r\n        </div>\r\n\r\n        <button \r\n          className=\"btn btn-primary\" \r\n          onClick = { onSubmit } \r\n          disabled={editing && !isEdited()}\r\n        >\r\n         {editing ? 'Edit' : 'Post' } \r\n        </button>\r\n        <button \r\n          className=\"btn btn-danger ms-2\"   \r\n          onClick={goBack}    \r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\nBlogForm.propTypes = {\r\n  editing: bool\r\n}\r\n\r\n\r\nBlogForm.defaultProps = {\r\n  editing: false\r\n}\r\nexport default BlogForm;","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\BlogList.js",["145"],[],"import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport Card from '../components/Card';\r\nimport { useHistory } from 'react-router';\r\n//import  LoadingSpinner  from '../components/LoadingSpinner';\r\nimport { bool } from 'prop-types';\r\nimport Pagination from './Pagination';\r\n//import Pagination2 from './Pagination2';\r\nimport LoadingSpinner  from './LoadingSpinner';\r\n\r\nconst BlogList = ({ isAdmin }) => {\r\n\r\n    const url = \"http://travelbusanko.com\"; \r\n    const history = useHistory();\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [numberOfPosts, setNumberOfPosts] = useState(0);\r\n    const [numberOfPages, setNumberOfPages] = useState(0);\r\n    const limit = 5;\r\n\r\n    useEffect(()=> {\r\n        setNumberOfPages(Math.ceil(numberOfPosts/limit));\r\n    }, [numberOfPosts]);\r\n\r\n    const getPosts = (page = 1) =>{\r\n        setCurrentPage(page);\r\n        let params = { \r\n            _page : page,\r\n            _limit : limit         \r\n        }\r\n  \r\n        if(!isAdmin){\r\n            params={...params, publish:true};\r\n            console.log(params);\r\n        }\r\n       \r\n        \r\n        //axios.get('http://localhost:5000/board_test', {\r\n        // axios.get( url +'/board_test?_page=&{page}&_limit={limit}')\r\n         axios.get( url +'/board_test', {       \r\n                 params                   \r\n         }).then((res) => {                    \r\n            //setNumberOfPosts(res.headers['x-total-count']); \r\n            //console.log(params._limit);\r\n            //console.log(res.data);\r\n            setNumberOfPosts(res.data.length);            \r\n            setPosts(res.data);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    const deleteBlog = (e, id) => {\r\n      e.stopPropagation(); // 상위계층의 클릭 이벤트를 막아줌(버블링을 막음)\r\n      //console.log('delete blog');\r\n      //console.log({id});      \r\n      //axios.delete(url + \"/board_test\", {id}).then(()=>{\r\n       axios.delete(url + `/board_test/${id}`).then(()=>{\r\n        setPosts(prevPosts => prevPosts.filter(post => post.id !== id)\r\n        )\r\n        }); \r\n    };\r\n    \r\n    useEffect(()=>{\r\n        getPosts();\r\n    }, []); \r\n\r\n    if(loading ){\r\n        return (\r\n        <LoadingSpinner />\r\n        )\r\n    } \r\n    if (posts.length === 0) {\r\n        return (<div> No blog posts found </div>)\r\n    }\r\n\r\n    const renderBlogList= ()=>{\r\n        return posts.map(post => {       \r\n            return (\r\n                <Card key={post.id} \r\n                title={post.title} \r\n                onClick={ () => history.push(`/blogs/${post.id}`)} \r\n                >     \r\n                {isAdmin ? (<div>\r\n                    <button className=\"btn btn-danger btn-sm\"\r\n                    onClick={(e) =>  deleteBlog(e, post.id) }\r\n                    /* onClick = {(e) => {\r\n                    e.stopPropagation();\r\n                    console.log('HHS')\r\n                    }} */\r\n                    >  Delete\r\n                    </button>\r\n                </div>) : null}\r\n                </Card>    \r\n            ); \r\n        })    \r\n    }\r\n    return (\r\n    <div>\r\n       { renderBlogList() } \r\n     \r\n       {numberOfPages > 1 && <Pagination\r\n          currentPage= {currentPage} \r\n          numberOfPages = {numberOfPages} \r\n          \r\n          onClick={getPosts} \r\n        />}      \r\n    </div>\r\n    )\r\n};\r\n\r\nBlogList.propTypes = {\r\n  isAdmin: bool\r\n}\r\nBlogList.defaultProps = {\r\n  isAdmin: false\r\n};\r\nexport default BlogList;\r\n","C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\Card.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\Pagination.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\components\\LoadingSpinner.js",[],[],"C:\\Users\\PKNU\\Documents\\GitHub\\travelbusanko\\travelbusanko\\src\\members\\ModifyUser.js",["146","147","148","149","150"],[],{"ruleId":"151","severity":1,"message":"152","line":18,"column":12,"nodeType":"153","messageId":"154","endLine":18,"endColumn":20},{"ruleId":"151","severity":1,"message":"155","line":20,"column":9,"nodeType":"153","messageId":"154","endLine":20,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":54,"column":21,"nodeType":"158","messageId":"159","endLine":54,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":54,"column":54,"nodeType":"162","messageId":"163","endLine":54,"endColumn":56},{"ruleId":"156","severity":1,"message":"157","line":54,"column":69,"nodeType":"158","messageId":"159","endLine":54,"endColumn":71},{"ruleId":"151","severity":1,"message":"164","line":5,"column":16,"nodeType":"153","messageId":"154","endLine":5,"endColumn":26},{"ruleId":"151","severity":1,"message":"165","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":19},{"ruleId":"160","severity":1,"message":"161","line":42,"column":37,"nodeType":"162","messageId":"163","endLine":42,"endColumn":39},{"ruleId":"151","severity":1,"message":"166","line":8,"column":10,"nodeType":"153","messageId":"154","endLine":8,"endColumn":14},{"ruleId":"151","severity":1,"message":"167","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":33,"column":18,"nodeType":"170","endLine":33,"endColumn":51},{"ruleId":"151","severity":1,"message":"171","line":12,"column":12,"nodeType":"153","messageId":"154","endLine":12,"endColumn":20},{"ruleId":"160","severity":1,"message":"172","line":64,"column":23,"nodeType":"162","messageId":"163","endLine":64,"endColumn":25},{"ruleId":"151","severity":1,"message":"173","line":11,"column":12,"nodeType":"153","messageId":"154","endLine":11,"endColumn":19},{"ruleId":"151","severity":1,"message":"174","line":28,"column":11,"nodeType":"153","messageId":"154","endLine":28,"endColumn":20},{"ruleId":"168","severity":1,"message":"175","line":37,"column":7,"nodeType":"176","endLine":37,"endColumn":20,"suggestions":"177"},{"ruleId":"168","severity":1,"message":"178","line":67,"column":8,"nodeType":"176","endLine":67,"endColumn":10,"suggestions":"179"},{"ruleId":"151","severity":1,"message":"180","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":22},{"ruleId":"151","severity":1,"message":"166","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"164","line":3,"column":16,"nodeType":"153","messageId":"154","endLine":3,"endColumn":26},{"ruleId":"151","severity":1,"message":"181","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":12},{"ruleId":"168","severity":1,"message":"182","line":58,"column":7,"nodeType":"176","endLine":58,"endColumn":9,"suggestions":"183"},"no-unused-vars","'userInfo' is assigned a value but never used.","Identifier","unusedVar","'TOKEN' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'loc_id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'locTypes' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'loading' is assigned a value but never used.","'printDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'title'. Either include it or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["185"],"'refreshToken' is defined but never used.","'Swal' is defined but never used.","React Hook useEffect has a missing dependency: 'userinfo'. Either include it or remove the dependency array.",["186"],{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [id, editing, title]",{"range":"193","text":"194"},"Update the dependencies array to be: [getPosts]",{"range":"195","text":"196"},"Update the dependencies array to be: [userinfo]",{"range":"197","text":"198"},[1355,1368],"[id, editing, title]",[2278,2280],"[getPosts]",[1846,1848],"[userinfo]"]